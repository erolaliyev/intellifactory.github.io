---
title: "WebSharper proposal for MIX 2011"
categories: "f#,websharper"
abstract: "MIX is probably the most well-known and one of, if not the most challenging conferences to present at. It usually features prominent community and Microsoft technology leaders and evangelists and aims to bring together web professionals from all around the world. [...]"
---
<img src="/assets/MIX.gif">

<a href="http://live.visitmix.com/">MIX</a> is probably the most well-known and one of, if not the most challenging conferences to present at. It usually features prominent community and Microsoft technology leaders and evangelists and aims to bring together web professionals from all around the world.

As every year, there are virtually hundreds of talk proposals sent to MIX for consideration. Out of these, the ones that align with the mission of MIX to foster the exchange of ideas are selected for a public voting to select the top X, most popular themes and proposals.

I would like to invite you to vote for my WebSharper proposal, it's really simple and all it takes is a single click and a few seconds. You can vote <a href="http://live.visitmix.com/OpenCall/Vote/Session/66">here</a>, or by clicking on the MIX logo on the left. I appreciate your vote and thanks for taking the time to help us spread the news on <a href="http://www.websharper.com/">WebSharper</a>.

Here is the proposal:

<quote>Whether you need advanced and interactive data visualization for an enterprise web application, custom maps and route planning for your next NerdDinner spin-off project, or just need clean and easy to use web controls that run on all modern web browsers without plugins - you will surely be doing a lot of JavaScript development and integration.The proliferation of JavaScript libraries covering nearly every aspect of client-side functionality offers plenty of choices - yet perhaps itâ€™s never been more difficult to pick the right set of technologies and libraries that will scale with time and your requirements.

What if you had a web application platform built on proven technologies such as ASP.NET or ASP.NET MVC that would free you from doing all that heavy JavaScript plumbing to connect your server and client functionality, yet enable you to quickly try out different JavaScript libraries without having to invest a lot of time to learn their quirks? One that enables you to write all your server and client code in the same language, even in the same file? One that would free you from having to chase and manually define JavaScript library dependencies and would instead guarantee that all file includes are entirely managed, complete and minimal?

With WebSharper you can enjoy all that and a LOT more. Built around the newest member of the .NET language ecosystem, F# and its strong metaprogramming capabilities, WebSharper gives you powerful functional abstractions and convenient embedded DSL syntax to declaratively express arbitrarily complex user interfaces with dependent controls and validation logic (formlets), sequences of related web forms and their data transformation logic (flowlets), and even entire web sites composed of client and server side functionality (sitelets) - all as first-class values and statically type-checked - and yes, you will see red squiggles in Visual Studio if your formlets, flowlets, or sitelets have any inconsistencies. Do these make you more productive? You bet! Not only do you get type-safe access to you web form data, or safe and always correct hyperlinks, but unlike with any other web technology you can safely and arbitrarily compose these building blocks without having to worry about some parts breaking. And to top that, you will also enjoy seamless MSBuild automation and a handsome set of Visual Studio project templates to cater to different scenarios and your needs.

This talk is your gateway to learning everything about functional, reactive web development with F# and WebSharper, and to start coding stunning, robust, client-based HTML5 and JavaScript applications that run in the browser and communicate with the server only on demand, combine and utilize any number of JavaScript libraries without writing a single line of JavaScript code, and enjoy full automation with single-click deployment and ready-to-rock templates for Visual Studio.You will also learn about integrating your client-based web applications with ASP.NET and ASP.NET MVC, and extending your legacy ASP.NET applications with highly interactive client-based functionality. You will gain first-hand experience in developing markup-less, dynamic, template-based web applications using WebSharper sitelets; developing efficient and robust JavaScript code with F#; bringing third-party JavaScript libraries into type-safe F# world; and creating mobile applications that utilize industry standard technologies via various WebSharper extensions.

Develop the rich, interactive web applications of tomorrow - now and easier than ever.
</quote>